---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 720px;
			}
			.articles-list {
				list-style-type: none;
				margin: 2em 0;
				padding: 0;
				border-top: 2px solid var(--text-primary);
			}
			.article-item {
				padding: 1.5em 0;
				border-bottom: 1px solid rgba(0, 0, 0, 0.1);
			}
			.article-item:last-child {
				border-bottom: 2px solid var(--text-primary);
			}
			.article-link {
				display: block;
				text-decoration: none;
			}
			.article-header {
				display: flex;
				justify-content: space-between;
				align-items: baseline;
				gap: 1em;
				margin-bottom: 0.5em;
			}
			.title {
				margin: 0;
				color: var(--text-primary);
				font-size: 1.5em;
				line-height: 1.2;
				font-weight: 700;
			}
			.date {
				margin: 0;
				color: var(--accent);
				font-style: italic;
				font-size: 0.9em;
				white-space: nowrap;
			}
			.description {
				margin: 0;
				color: var(--text-primary);
				font-size: 1em;
				line-height: 1.5;
				opacity: 0.8;
			}
			.section-title {
				text-align: center;
				font-size: 2.5em;
				margin: 1em 0;
				color: var(--text-primary);
				text-transform: uppercase;
				letter-spacing: 0.05em;
				border-bottom: 4px double var(--text-primary);
				padding-bottom: 0.5em;
			}
			@media (max-width: 720px) {
				.article-header {
					flex-direction: column;
					gap: 0.5em;
				}
				.date {
					font-size: 0.8em;
				}
				.title {
					font-size: 1.3em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<h1 class="section-title">Latest Articles</h1>
			<ul class="articles-list">
				{
					posts.map((post) => (
						<li class="article-item">
							<a href={`/blog/${post.id}/`} class="article-link">
								<div class="article-header">
									<h2 class="title">{post.data.title}</h2>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</div>
								{post.data.description && (
									<p class="description">{post.data.description}</p>
								)}
							</a>
						</li>
					))
				}
			</ul>
		</main>
		<Footer />
	</body>
</html>
